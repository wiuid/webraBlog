<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.webra.mapper.CommentsMapper">
    <resultMap type="Comments" id="commentsResult">
        <id     property="id"           column="id"             />
        <result property="articleId"    column="article_id"     />
        <result property="userId"       column="user_id"        />
        <result property="reply"        column="reply"          />
        <result property="replyUserNickname" column="reply_user_nickname"/>
        <result property="text"         column="text"           />
        <result property="superId"      column="super_id"       />
        <result property="createTime"   column="create_time"    />

        <result property="nickname"     column="nickname"       />
        <result property="title"        column="title"          />


    </resultMap>

    <insert id="insertComment" parameterType="Comments">
        insert into `comments` (
        article_id,
        user_id,
        text,
        <if test="superId != null and superId != ''">super_id,</if>
        <if test="reply != null and reply != ''">reply,</if>
        <if test="replyUserNickname != null and replyUserNickname != ''">reply_user_nickname,</if>
        create_time
        ) value (
        #{articleId},
        #{userId},
        #{text},
        <if test="superId != null and superId != ''">#{superId},</if>
        <if test="reply != null and reply != ''">#{reply},</if>
        <if test="replyUserNickname != null and replyUserNickname != ''">#{replyUserNickname},</if>
        sysdate()
        )
    </insert>

    <delete id="delComment" parameterType="Integer">
        delete from `comments`
        where id=#{id}
    </delete>
    <delete id="delCommentByArticleId" parameterType="Integer">
        delete from `comments`
        where article_id=#{articleId}
    </delete>

    <delete id="delCommentList" parameterType="Integer">
        delete from `comments`
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="queCommentsByArticleId" parameterType="Integer" resultMap="commentsResult">
        select c.*,u.nickname
        from `comments` c
        left join `user` u on u.id = c.user_id
        where article_id = #{articleId}
        order by c.create_time asc
    </select>

    <select id="queCommentsBySuperId" parameterType="Integer" resultMap="commentsResult">
        select id from `comments` where super_id=#{superId}
    </select>


    <select id="queCommentsByUserArticleId" parameterType="Integer" resultMap="commentsResult">
        select c.id,c.text,c.super_id,c.article_id,c.create_time,u.nickname,a.title
        from `comments` c
        left join `user` u on u.id = c.user_id
        left join `article` a on a.id = c.article_id
        <where>
            <if test="articleId != null">c.article_id = #{articleId}</if>
            <if test="userId != null">and c.user_id = #{userId}</if>
        </where>
        order by c.create_time desc
    </select>

    <select id="queCommentsById" parameterType="Integer" resultMap="commentsResult">
        select * from `comments`
        where id = #{commentId}
        limit 1
    </select>

    <select id="queCommentsTotal" resultType="Integer">
        select count(*) from `comments`article
    </select>
</mapper>
